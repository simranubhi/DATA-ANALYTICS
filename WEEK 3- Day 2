                                                                 ---- WEEK 3 (DAY 1) ----


Topics covered: - Linear and multiple regression for stress-strain and flow rate modeling
                - Polynomial regression for non-linear trends
                - Curve fitting in mechanical systems (e.g., fatigue analysis)

What is Time Series Analysis?
- Time Series Analysis is a method of analyzing data points collected or recorded at specific time intervals (like daily, monthly, or yearly).
- It helps to understand trends, seasonal effects, or make forecasts based on historical data.

Common Use Cases of Time Series:
- Stock market prediction
- Sales forecasting
- Temperature and weather forecasting
- Power consumption tracking
- Website traffic monitoring


---------------------------------------
  CODE for Time Series Analysis in R
---------------------------------------
# Install and load correct package
install.packages("forecast")      
library(forecast)
ts_data = ts(mtcars, frequency = 12, start = c(1999, 1))
# Training data
train_data = window(ts_data, start = c(1999, 1), end = c(2000, 12))
test_data = window(ts_data, start = c(2001, 1))
# Build and forecast ARIMA model
arima_model = forecast::auto.arima(train_data)
forecast_result = forecast::forecast(arima_model, h = 12)
summary(arima_model)
plot(forecast_result)




What is Regression?
- Regression is a statistical technique that models and analyzes the relationships between a dependent variable and one or more independent variables.
- In engineering and mechanical contexts, regression helps us model real-world physical systems using data collected through experiments or sensors.

-- Linear and Multiple Regression --
Definition:
  Linear regression models the relationship between two variables using a straight line.
  Multiple regression involves more than one independent variable.

Use Case:
  Modeling the stress-strain relationship in a material under tension or compression.
  Predicting fluid flow rate in a pipe based on diameter, pressure, and viscosity.

Real-Life Mechanical Example:
In a mechanical lab, engineers apply force to a metal rod and measure how much it stretches. By applying linear regression to the stress-strain data, they can determine the material's Young’s Modulus.

Polynomial Regression for Non-Linear Trends:
Polynomial regression is an extension of linear regression that models non-linear relationships by introducing powers (x², x³, etc.) of the independent variable.

Use Case: When a simple straight-line model doesn’t fit the data well.
          Ideal for material deformation, cooling curves, or motor efficiency curves.

Real-Life Mechanical Example: In a heat transfer experiment, the temperature drop of a heated metal plate over time shows a non-linear pattern. Polynomial regression helps model this decay more accurately.

-- Curve Fitting in Mechanical Systems (e.g., Fatigue Analysis): Curve fitting involves finding the best-fit function (linear or non-linear) that closely follows a set of data points.

-- Use Case: Analyzing how a material fails over repeated cycles of stress (fatigue).

                                                                          
                                                                                        ---- CODE ----
# CURVE FITTING in R
myframe = data.frame(x = c(5, 7, 8, 9, 11, 15), y = c(2, 4, 6, 8, 10, 12))
plot(myframe$x, myframe$y, main = "Scatter Plot of x vs y",xlab = "X axis", 
     ylab = "Y axis", pch = 10, col = "blue")

#Short
#fit1 <- lm(y ~ x, data = myframe)                            
#lines(myframe$x, predict(fit1), col = "green", lwd = 2)      

# Fit models
fit1 <- lm(y ~ x, data = myframe)                               
fit2 <- lm(y ~ poly(x, 2, raw = TRUE), data = myframe)          
fit3 <- lm(y ~ poly(x, 3, raw = TRUE), data = myframe) 
fit4 <- lm(y ~ poly(x, 4, raw = TRUE), data = myframe)
fit5 <- lm(y ~ poly(x, 5, raw = TRUE), data = myframe)
# Regression models
lines(x_axis, predict(fit1, new = data.frame(x = x_axis)), col = "green", lwd = 2)
lines(x_axis, predict(fit2, new = data.frame(x = x_axis)), col = "red", lwd = 2)
lines(x_axis, predict(fit3, new = data.frame(x = x_axis)), col = "purple", lwd = 2)
lines(x_axis, predict(fit4, new = data.frame(x = x_axis)), col = "skyblue", lwd = 2)
lines(x_axis, predict(fit5, new = data.frame(x = x_axis)), col = "yellow", lwd = 2)

summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
summary(fit3)$adj.r.squared
summary(fit4)$adj.r.squared
summary(fit5)$adj.r.squared




---- PROJECTS DISCUSSED ----
1. Explantory data analytics on real world data sets -- COVID 19/TITANIC
2. Time Series Forecasting on any data set
3. Sales visualizing dash board(weekly,monthly)
4. Student performance predictor and indicator
5. Health Care Data Analysis(Hear disease, Diabetes)
6. Resume screening (on text mining)
7. Web Scrapping(accumulating different info websites)
8. Statistical survey analysis
9. Geom special visualization(many S/W can be created, BEST OF ALL)
   9.1. for example in every city police station how many FIRs are registered --> Crime rate 
   9.2. Air Quality of different regions in a particular city, 
   9.3. Population density for any region )
   Comnbining all : HYBRID MODEL (Take real data)


                                                                                           ---------------------------------
